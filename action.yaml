name: 'codefresh-report-image'
description: 'Report image to codefresh'
inputs:
  VERSION:
    description: specify client version
    required: false
    default: 0.0.87
  CF_API_KEY:
    description: "Codefresh API KEY"
    required: true
  CF_HOST:
    description: "Codefresh runtime exposed in cluster address: https://your.clusters.ci-cd.com/app-proxy"
    required: true
  CF_VERBOSE:
    description: "verbose output"
    required: false
  CF_IMAGE:
    description: image reported, quay.io/codefresh/newly-built-image:0.0.1
    required: true
  CF_CONTAINER_REGISTRY_INTEGRATION:
    required: false
    description: "list of container integration"
  CF_DOCKERHUB_USERNAME:
    required: false
    description: "Dockerhub username"
  CF_DOCKERHUB_PASSWORD:
    required: false
    description: "Dockerhub password"
  CF_REGISTRY_USERNAME:
    required: false
    description: "Generic registry username"
  CF_REGISTRY_PASSWORD:
    required: false
    description: "Generic registry password"
  CF_REGISTRY_DOMAIN:
    required: false
    description: "Generic registry domain"
  CF_INSECURE:
    required: false
    description: "security flag for standard registry protocol, when set to true it enables http protocol"
  CF_WORKFLOW_URL:
    required: false
    description: "external url for the workflow"
  CF_LOGS_URL:
    required: false
    description: "external url for the logs"
  # Enrichers
  CF_ENRICHERS:
    required: false
    description: "list of integrations separated by commas: jira, github"
  # GIT
  CF_GIT_PROVIDER:
    required: false
    description: "Git provider"
  CF_GIT_REPO:
    required: false
    description: "The GitHub repo to use to enrich"
  CF_GIT_BRANCH:
    required: false
    description: "The git branch to use to enrich"
  CF_GIT_INTEGRATION:
    required: false
    description: "The integration key"
  ## Github
  CF_GITHUB_TOKEN:
    required: false
    description: "Github api key"
  CF_GITHUB_API_HOST_URL:
    required: false
    description: "Github api host url"
  CF_GITHUB_CONTEXT:
    required: false
    description: "Github context from Codefresh Classic platform"
  # JIRA
  CF_JIRA_API_TOKEN:
    required: false
    description: "Jira user api key"
  CF_JIRA_EMAIL:
    required: false
    description: "Jira user email"
  CF_JIRA_HOST_URL:
    required: false
    description: "Jira account host url"
  CF_JIRA_PROJECT_PREFIX:
    required: false
    description: "Jira project prefix"
  CF_JIRA_MESSAGE:
    required: false
    description: "String that contains PREFIX-ISSUE_ID"
  CF_JIRA_INTEGRATION:
    required: false
    description: "The integration key"
  CF_JIRA_FAIL_ON_NOT_FOUND:
    required: false
    description: "fail in case of ticket not found"
  # AWS
  CF_AWS_ROLE:
    required: false
    description: "arn:aws:role/123456"
  CF_AWS_REGION:
    required: false
    description: "us-east-1"
runs:
  using: "composite"
  steps:
    - shell: bash
      env:
        VERSION: "${{ inputs.VERSION }}"
        CF_HOST: "${{ inputs.CF_HOST }}"
        CF_API_KEY: "${{ inputs.CF_API_KEY }}"
        
        CF_IMAGE: "${{ inputs.CF_IMAGE }}"
        CF_VERBOSE: "${{ inputs.CF_VERBOSE }}"
        CF_CONTAINER_REGISTRY_INTEGRATION: "${{ inputs.CF_CONTAINER_REGISTRY_INTEGRATION }}"
        CF_DOCKERHUB_USERNAME: "${{ inputs.CF_DOCKERHUB_USERNAME }}"
        CF_DOCKERHUB_PASSWORD: "${{ inputs.CF_DOCKERHUB_PASSWORD }}"
        CF_REGISTRY_USERNAME: "${{ inputs.CF_REGISTRY_USERNAME }}"
        CF_REGISTRY_PASSWORD: "${{ inputs.CF_REGISTRY_PASSWORD }}"
        CF_REGISTRY_DOMAIN: "${{ inputs.CF_REGISTRY_DOMAIN }}"
        CF_INSECURE: "${{ inputs.CF_INSECURE }}"
        CF_WORKFLOW_URL: "${{ inputs.CF_WORKFLOW_URL }}"
        CF_LOGS_URL: "${{ inputs.CF_LOGS_URL }}"

        CF_ENRICHERS: "${{ inputs.CF_ENRICHERS }}"
        # GIT
        CF_GIT_PROVIDER: "${{ inputs.CF_GIT_PROVIDER }}"
        CF_GIT_REPO: "${{ inputs.CF_GIT_REPO }}"
        CF_GIT_BRANCH: "${{ inputs.CF_GIT_BRANCH }}"
        CF_GIT_INTEGRATION: "${{ inputs.CF_GIT_INTEGRATION }}"
        ## Github
        CF_GITHUB_TOKEN: "${{ inputs.CF_GITHUB_TOKEN }}"
        CF_GITHUB_API_HOST_URL: "${{ inputs.CF_GITHUB_API_HOST_URL }}"
        CF_GITHUB_API_PATH_PREFIX: "${{ inputs.CF_GITHUB_API_PATH_PREFIX }}"
        CF_GITHUB_CONTEXT: "${{ inputs.CF_GITHUB_CONTEXT }}"

        # JIRA
        CF_JIRA_API_TOKEN: "${{ inputs.CF_JIRA_API_TOKEN }}"
        CF_JIRA_EMAIL: "${{ inputs.CF_JIRA_EMAIL }}"
        CF_JIRA_HOST_URL: "${{ inputs.CF_JIRA_HOST_URL }}"
        CF_JIRA_PROJECT_PREFIX: "${{ inputs.CF_JIRA_PROJECT_PREFIX }}"
        CF_JIRA_MESSAGE: "${{ inputs.CF_JIRA_MESSAGE }}"
        CF_JIRA_INTEGRATION: "${{ inputs.CF_JIRA_INTEGRATION }}"
        CF_JIRA_FAIL_ON_NOT_FOUND: "${{ inputs.CF_JIRA_FAIL_ON_NOT_FOUND }}"

        #AWS
        CF_AWS_ROLE: "${{ inputs.CF_AWS_ROLE }}"
        CF_AWS_REGION: "${{ inputs.CF_AWS_REGION }}"

        # github
        GITHUB_REF_NAME: "${{ github.ref_name }}"
        GITHUB_REPOSITORY: "${{ github.repository }}"
        GITHUB_COMMIT_MESSAGE: "${{ github.event.head_commit.message }}"
        GITHUB_PAYLOAD_MESSAGE: "${{ github.event.client_payload.message }}"        


      run: |
        # add defaults
        export CF_GIT_BRANCH="${CF_GIT_BRANCH:-$GITHUB_REF_NAME}"
        export CF_GIT_REPO="${CF_GIT_REPO:-$GITHUB_REPOSITORY}"
        # built vars
        export CF_WORKFLOW_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        export CF_GIT_PROVIDER="${CF_GIT_PROVIDER:-github}"
        export CF_CI_TYPE=github-actions
        
        env | cut -f 1 -d "=" | grep -E "^CF_"  > cf_env
        echo "Provided env vars: $(cat cf_env|xargs echo)"
        docker run --env-file=cf_env "quay.io/codefresh/codefresh-report-image:$VERSION"
